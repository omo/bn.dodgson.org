---
title: "このごろ Standard ML の入門を読んでいる"
date: 2007-01-27
---
<h3>近況</h3>
<p>このごろ Standard ML の入門を読んでいる. 
新しいプログラミング環境, 言語やライブラリを試すと, 少し調べたあとは何か作りたくなる. 
さて, 何をつくろう. 悩ましい. </p>
<p>あまり難しくないものがいい. なにしろ覚えたてのよちよち歩きだから. 
かといってあまり味気ないのも寂しい. 
fib, hanoi や tarai はもってのほか. データ構造も動きがなくつまらない. 
もっとアプリケーションぽいのがいい. 
オリジナリティはいらないけれど,  完成したものが動くヨロコビは捨て難い. 
端的にいえば入門書の最終章に作るプログラム. 新人研修の締め括りにつくるプログラム. 
きみはもう一人で歩けると言ってほしい. わたしは一人で歩けると言いたい. 
イニシエーションとコングラチュレーション. </p>
<p>そんな欲求を見たす "トイ・プログラム" のコレクションがないものか. 
Toy Program Wiki みたいな都合のいいサイトを探すも見当たらず. 
プログラミングの例題なら <a href="http://www.topcoder.com/">topcoder.com</a> のような
サイトにまとまっている. 
コンテストは悪くないけれど, 問題がちょっと難しい. もっとずっとベタでいい. 
出版されているドリルの類もパス. 味気なさそう. </p>
<h4>トイ・プログラムいろいろ</h4>
<p>かつて読んだ入門書の例題を思いかえす. 
今もトラウマになっている MFC の入門書(VC++4.0 付属)は, 
おえかきアプリの Scribble を作った気がする. 
Java はよく覚えていない. Applet でオセロあたりかな. 
Applet を含めて GUI が強力な Java は例題に事欠かない. 
<a data:asin='4756132545' href='http://www.amazon.co.jp/%E3%82%AA%E3%83%96%E3%82%B8%E3%82%A7%E3%82%AF%E3%83%88%E6%8C%87%E5%90%91%E3%82%B9%E3%82%AF%E3%83%AA%E3%83%97%E3%83%88%E8%A8%80%E8%AA%9E-ASCII-SOFTWARE-SCIENCE-Language/dp/4756132545%3FSubscriptionId%3D0SRV0GVS2Q5FGJTWHV82%26tag%3Dstepstophanta-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4756132545'>Ruby の教科書</a> も例題が豊富だ. 
マインスイーバ, ライフゲーム, rtags, mtalkd. 
<a data:asin='4274066401' href='http://www.amazon.co.jp/Rails%E3%81%AB%E3%82%88%E3%82%8B%E3%82%A2%E3%82%B8%E3%83%A3%E3%82%A4%E3%83%ABWeb%E3%82%A2%E3%83%97%E3%83%AA%E3%82%B1%E3%83%BC%E3%82%B7%E3%83%A7%E3%83%B3%E9%96%8B%E7%99%BA-%E5%89%8D%E7%94%B0-%E4%BF%AE%E5%90%BE/dp/4274066401%3FSubscriptionId%3D0SRV0GVS2Q5FGJTWHV82%26tag%3Dstepstophanta-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4274066401'>Rails</a> はショッピングサイトだっけ. 
<a data:asin='4873111269' href='http://www.amazon.co.jp/%E5%88%9D%E3%82%81%E3%81%A6%E3%81%AEPerl-%E3%83%A9%E3%83%B3%E3%83%80%E3%83%AB%E3%83%BBL-%E3%82%B7%E3%83%A5%E3%83%AF%E3%83%AB%E3%83%84/dp/4873111269%3FSubscriptionId%3D0SRV0GVS2Q5FGJTWHV82%26tag%3Dstepstophanta-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4873111269'>はじめての Perl</a> は CGI のゲストブック. 
<a data:asin='4900900192' href='http://www.amazon.co.jp/GNU-Emacs%E6%8B%A1%E5%BC%B5%E3%82%AC%E3%82%A4%E3%83%89%E2%80%95Emacs-Lisp%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E3%83%9C%E3%83%96-%E3%82%B0%E3%83%AA%E3%83%83%E3%82%AF%E3%82%B9%E3%83%86%E3%82%A4%E3%83%B3/dp/4900900192%3FSubscriptionId%3D0SRV0GVS2Q5FGJTWHV82%26tag%3Dstepstophanta-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4900900192'>GNU Emacs 拡張ガイド</a> はクロスワードパズルを編集する 
crossword-words-mode. (知らなかった...) 
手元にあるのはこんなものだった. 環境の得手不得手がわかる. </p>
<p>周りの人にもインタビューしてみた. 
まず UNIX のコマンド群からめぼしいものをピックアップする路線. 
grep, find, wc あたりがおすすめらしい.  
基本的なシステムコールを使い, IO を使い, 文字列処理を使い, データはそこにある. 
たしかによさそう. </p>
<p>変わり種として ImageMagick の路線も悪くない. 画像の拡大, 縮小, 回転, 反転. 
ピクセル操作は適度に手を動かせるし, 結果が目に見えてわかりやすい. 
ネットワークを叩くなら wget はどうだろう. 
ソケットを使えるし, ヘッダのパースは手頃な文字列処理. 
サーバは山ほどある. テキストベースでデバッグも簡単. 
対になる HTTP サーバを書くのもいい. ただサーバの書き易さは環境によって差がある. 
スレッドまわりが弱いと辛い. </p>
<p>標準入出力を使った対話的なプログラムが次のステップ. たとえば家計簿シェル. 
家計簿は単純な入出力だけでなくデータを保存する必要がある. 
永続的なデータを扱えるトイ・プログラムは案外すくない. 貴重だ. 
実用は厳しそうだけれど, 愛があればなんとか. 三日くらいは使うかな...
他に対話的な電卓なんてどうだろうと提案したら, 
<a href="http://en.wikipedia.org/wiki/Forth_(programming_language)">Forth</a> 
インタプリタの方が簡単だと教わった. そんなものなのね. </p>
<p>GUI を使えるとバリエーションはぐっと増える. 
先の Scribble は典型. あとはゲームを作れるのが大きい. 
実用性がなくても楽しめるのがいい. オセロ, 神経衰弱のような古典からテトリスまで. 
(テトリスも古典か...) ゲームばかりに偏りすぎても面白くないけれど, 題材が多いのは有り難い. 
なお GUI といっても描画プリミティブやウィジェットの豊富さで作れるものには差がある. 
タートルグラフィクスでテトリスはちょっとしんどい気がする. </p>
<p>GUI とは違うけれど, グラフィクスの路線はそれなりに楽しい. 
PostScript 風オレオレ言語を使った画像レンダラや, 
球体専用レイトレーサなんかは手頃だ. 
単純なアルゴリズムの実装なのに, 絵がでるだけでだいぶ嬉しい. </p>
<p>CGI に使える言語や Web フレームワークが相手だと, GUI 以上に色々できる. 
掲示板, TODO リスト, そのほか. 
そういえば <a data:asin='4797336021' href='http://www.amazon.co.jp/%E3%81%B5%E3%81%A4%E3%81%86%E3%81%AEHaskell%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9F%E3%83%B3%E3%82%B0-%E3%81%B5%E3%81%A4%E3%81%86%E3%81%AE%E3%83%97%E3%83%AD%E3%82%B0%E3%83%A9%E3%83%9E%E3%81%AE%E3%81%9F%E3%82%81%E3%81%AE%E9%96%A2%E6%95%B0%E5%9E%8B%E8%A8%80%E8%AA%9E%E5%85%A5%E9%96%80-%E9%9D%92%E6%9C%A8-%E5%B3%B0%E9%83%8E/dp/4797336021%3FSubscriptionId%3D0SRV0GVS2Q5FGJTWHV82%26tag%3Dstepstophanta-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D4797336021'>ふつうの Haskell プログラミング</a> では最後の Wiki を作ると伝えきく. 
Web のもつ素晴らしさの一つは, 
簡単なプログラムを動かした時の嬉しさが大きいところだな. 
標準入出力を使うだけで GUI つきのネットワークプログラムが動いてしまうんだから. </p>
<h4>NoviceCoder</h4>
<p>並べてみるとぼちぼちあるね. 
やっぱりこういうトイ・プログラムの例題をまとめたページがあると楽しそう. 
TopCoder ならぬ NoviceCoder (ドメインとられてた...). 
ジャンル毎にプログラムが分類されていて, プログラム毎にページがある. 
ページには, まずアプリケーションの概要(仕様)が書かれている. 
そのほかに必要なライブラリ (GUI, Web, 正規表現, XML, etc.) や
想定される規模の見積りが書かれている. 既存のアプリケーションへ参照があったり, 
読者による投稿ができてもいい. 
正解のない方がいい気もするし, いっそ Commentary や Tutorial が欲しい気もする. </p>
<p>いずれにせよ楽しいサイトになりそうな気はする. 
そもそも似たようなのは本当にないんだろうか. どこかにないかしら. 
なにか知っている人がいたらおしえてください. </p>
<p>それにしても SML/NJ のライブラリは貧相だなあ. 家計簿にしとくか...</p>
