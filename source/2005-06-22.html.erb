---
title: "日記10日目"
date: 2005-06-22
---
<p>日記</p><p>日記10日目. 8:30 起床.</p><p>雨. 研修レビュー. レビューするコードは少なかったのだがテストについて説いていたら時間を浪費. 話が長いのはよくない. 重要なことを順序だって説明する必要がある. まず前提として, 議論しているのは開発者によるテストだということ. テストは継続してメンテナンスされなければ意味がないということ. これが軸. そして, テストが完全であることを目指すあまり目標を高く設定し, その結果挫けてしまうという単体テストのアンチパターンについて説明する. 社内のレポジトリに散在するテスティング・フレームワークの残骸がそれを物語っている. 他のアンチパターンと, 対抗するためのプラクティスについても説明. これらは元同僚によって示された洞察であり, 私の発見ではないこともやんわりと伝える. 失望に繋がる過剰な期待は前もって取り除くほうがいい.</p><p>月曜にやるはずだったスケジュール整理. 一週間強でリリースのはずだが緊張感なし. 見積りだとギリギリか, オーバーフローするように見える. しかし手が動かない. 自分の責任感の低さを思いだす. これまでとの違いは, 私のかわりにコードを書いてくれる人が誰もいないことだ. デプレスによる無能化をごまかしきれなくなる日は近い.</p><p>新入社員の日報が当日中でなく翌日に出されており望ましくない. そんな指摘がメーリングリストが流れる. 当事者の新人は謝っていたが, 原因となる(私から見ると過剰な)残業の正当性をその上司が主張. 他人事ながらうんざりする. 過労に正当性はない. 少くとも部下に過労を求める上司には. そんな陰口を同僚にメールする. すると新入社員もいずれ過労するのだから, その時期を早くするか遅くするかはポリシーの違いにすぎないという返事. 彼にとって過労が所与のものになったと知る. </p><p>デモづくり. 刹那的で楽しい作業. しかしあまり入れ込んでも自分の首を締めるだけなので, 必要な機能があることを示す最小限の作りに留める. </p><p>半月以上コードを書いていない.</p><p>10:00 出社, 23:30 帰宅, 昼食 カレー屋 K (ビーフカレー), 晩飯 和食居酒屋 E (鮭の塩焼). 同僚の差し入れを間食.</p>
