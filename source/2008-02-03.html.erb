---
title: "Sociometric Badge"
date: 2008-02-03
---
<h3>Sociometric Badge</h3>
<p><a href="http://www.iq.harvard.edu/blog/netgov/2008/01/social_network_feedback_in_rea.html">Social Network Feedback in Real Time</a> という記事があった. あるワークショップで参加者の social network (SN) を可視化してみせたところ, 参加者同士が anomaly に気付き自主的にそのネットワークを改善したという話. いろいろ面白い. 参加者の SN ってどうやったらわかるの？ それを改善するってどういうこと？</p>
<p>というわけで最初の疑問から. 参加者の SN を抽出するために, 著者らは "sociometric badge" というデバイスを使っている. これはマイクと赤外線センサ, 無線などを内蔵した小型計算機(センサ)で, 首から提げて持ち歩く. 大きさはケータイくらい. (<a href="http://web.media.mit.edu/~dolguin/publications.html">関係者のページ</a> に写真がある.)</p>
<p>マイクや赤外線の情報は無線でホスト計算機に送られ, ホスト計算機がデータを分析する. 赤外線の記録から badge 同士の距離がわかり, マイクで badge 所持者同士の会話を検出する. これで SN 分析に必要な情報は揃う: ノード間の距離(ここでは物理的な距離)とノード間の情報伝達(会話)を使えばいい. </p>
<p>そのデータから SN を復元し, バネモデルか何かでビヨンビヨンと可視化したとする. 
それを見た参加者は何に気付いたんだろう. これが次の疑問だった. 
で...元記事を読んだ時には英語が苦手でシャイな子がはぶられていたのを
疎なノードに気付いだ他の参加者が改善した, みたいな話が書いてあった気がするけど見当らない. 
ガセネタだったらすみません...</p>
<p>気をとりなおして話はつづく. sociometric badge を使った SN の分析には他に 
<a href="http://web.media.mit.edu/~bwaber/Waber-NetSci-07.pdf">Organizational Engineering using Sociometric Badges (PDF)</a> という記事があった. どこかの企業の一部門, 数十人の組織に sociometric badge をつけたまま一ヶ月くらい働いてもらったよ, という話. この調査では他に電子メールを使った SN 分析とインタビューを併用している. </p>
<p>調査結果は二つの面, 技術的な面白さと組織分析としての面白さがある. 
技術よりの発見として, 
著者らは電子メールから検出された SN と badge の検出した SN のもつ負の相関を指摘している. 
要するによく喋る人とはあまりメールしないということ. 言われてみれば当たり前だけれど, 
一方で電子メールは SN 分析によく使われる. 
調査結果は電子メールに依存する SN 分析の不適切さを示唆している. </p>
<p>個人的にはもう一つの面, 組織的な洞察の方が身近で興味を惹かれた. </p>
<p>調査が併用したインタビューは, 主に仕事の満足度に関するものだった. 
Q1: 今日の生産性は? Q2: 今日の自分の仕事は満足? Q3: 今日はどれだけ仕事をこなした? 
Q4: グループの対話の質はよかった? という具合. 
仕事できた感と SN の相関をみようというわけ. 
(ここで使う SN は電子メールと badge の結果を適当にくっつけたものらしい.)</p>
<p>調査によると, コミュニケーションの量と仕事の達成感(Q2-Q4)には負の相関がある. 
階級をまたぐコミュニケーションの量と Q4 には負の相関がある. 
socially important な人や, 他の role の人とコミュニケーションがある人は 
Q4 を低くつける. </p>
<p>つまり, 
メールやミーティングが多いのはかったるい. 上司や部下には話が通じない. 
管理職(=他の role とやりとりする人)もミーティグはかったるいと思っている. 
頼りにされてる人 (=socially important な人) はめんどくせーと思っている. 
...ということですね! ミーティングもメールも嫌いな私は大きく頷かざるを得ない. 
(若干 overstatement だけど.)</p>
<h4>Social Network Optimization</h4>
<p>だから楽しく働くためにはメールやミーティングをやめましょう. おしまい. 
という結論で個人的には良いんだけれど, 世間的にはたぶんまずい. 話はつづく. </p>
<p>著者らは不適切な SN の構造がストレスやオーバーヘッドの原因だとして, 
システムがその改善に寄与できないかを議論している. 
そのプロセスを Social Network Optimization (SNO) と呼ぶ. </p>
<p>でも最適な SN ってなんだろう. 
もちろん先のようなインタビューによって間接的に効用を測ることはできる.
でも人間関係はポインタ参照のようにすごい速度で書き換えることはできない. 
だから総当たりで試すのはムリ. SN から直接わかる指標をたて, それを改善していくことになる. 
著者らはいくつかのアイデアを示している. たとえば, 
グラフの特性経路距離(characterictic path length: グラフ内のノードの最長距離) 
を最小化するアプローチ. これはネットワークの情報伝達コストを代替している. 
システムは "A さんと B さんが知り合いになれば距離が改善されます" と
提案する. それを受けて SNO 担当の上司か誰かが A と B を(たとえば)ランチに誘う. 
事務方や受付の OL(美人) とプログラマ(私)がお近付きになれるかもしらん. SNO いいな. </p>
<p>もっとも全てのノードを接続して完全グラフを作れば特性距離は最短になる. 
一方で人間ひとりが維持できる辺の数には上限がある. (あたりまえ.)
やたらに辺を増やせばいいというわけではない. (ex.受付嬢は言い寄る男達にうんざりしている.)</p>
<p>逆に, 現状で接続が多すぎる人をみつけるのにも SN 分析は役立つ. 
そういう人はコミュニケーションのボトルネックであろうというわけ. 
(忙しくてつかまらない XX 部長, みたいのね.) 
ただし, それをみつけたところでランチに誘うより改善は大変だ. 
記事ではシステムから上司に現状を伝え, 仕事を移譲するよう本人に協力しろとある. 
ワーカホリックのエースをなんとかするのは大変そう. 
受付嬢もどうでもいい男を同期の友達に移譲するのは気がとがめるよね...</p>
<p>計算機に頼るかはともかく, 組織の SN を改善して生産性を高めましょうという話は
それなりに広く知られているらしい. 
記事では <a data:asin='1591392705' href='http://www.amazon.co.jp/Hidden-Power-Social-Networks-Understanding/dp/1591392705%3FSubscriptionId%3D0SRV0GVS2Q5FGJTWHV82%26tag%3Dstepstophanta-22%26linkCode%3Dxm2%26camp%3D2025%26creative%3D165953%26creativeASIN%3D1591392705'>The Hidden Power of Social Networks</a> 
というビジネス書を紹介していた. 
そのほか IBM もコンサルティングとして SN 分析サービスを宣伝している. (<a href="http://domino.watson.ibm.com/odis/odis.nsf/pages/board.13.html">Social network analytics and business optimization</a>)  IBM の記事はどんな方法で SN を洗いだすのかが説明されていないけれど, SN 分析で解決すべき問題についてはよくまとまっている. ノードだけでなくネットワークのサブグラフにも着目しているのが面白い. </p>
<h4>ネットワークを書き換えたいか</h4>
<p>企業にとって職場の SNO は有益だろうし, 
忙しい人やコミュニケーション不全に悩む人には朗報だろう. 
一方で私のように日頃 sparseness の恩恵に与っている人間にとっては, 
下手に調整されて(美人 OL ランチ以外の)余計な接続が増えるのは
あまり嬉しくなさそうだ. 
そうでなくても計算機に対話の様子を監視されるのに抵抗がある人はいるとおもう. 
sociometric badge なんて Big Brother もびっくりの監視装置になりかねないからね. </p>
<p>そう考えると, まずはウェブの SNS のような自主的に公開されているネットワークが 
SNO の対象になるのかもしれない. 
今は広告のネタに使うといった read-only の使われかたをしているけれど, 
やがてシステムがネットワークを書き換えるようになっても不思議はない. 
そういう意味で mixi の "あしあと" などはネットワークの
書き換えを促す素朴な仕組みと考えることができる. </p>
<p><a href="http://code.google.com/apis/socialgraph/">Social Graph API</a> 
なんてのも出てきたことだし, グラフを渡り歩く計算機がユーザに囁きかける日は近そう. 
自身のネットワークを書き換えようとする計算機に
積極的に手を貸す SN addicted な人と, それに抵抗する保守主義者の違いは色濃くなり, 
人間関係のありかたには一層大きな溝が広がるのだろう. 
プログラマとしては面白い. でもひきこもり sparsery としては気が重い. 
この人とは仲良くしなくていいですよ, とか言われてたらやだなあ...</p>
